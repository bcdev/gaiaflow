name: Package and Publish to PyPi

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  python-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]

    steps:
      - name: checkout xcube-clms
        uses: actions/checkout@v4

      - name: Install Pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash
        shell: bash

      - name: Add Pixi to PATH
        run: echo "$HOME/.pixi/bin" >> $GITHUB_PATH

      - name: Set up Python ${{ matrix.python-version }}
        run: pixi project python ${{ matrix.python-version }}

      - name: Install dependencies
        shell: bash -l {0}
        run: pixi install

      - name: Linting with ruff
        shell: bash -l {0}
        run:
          pixi run check

      - name: Typecheck with mypy
        shell: bash -l {0}
        run:
          pixi run typecheck

      - name: Install and Test
        shell: bash -l {0}
        run:
          pixi run test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
  PyPi-Deploy:
    name: Publish Python Package to PyPI
    runs-on: ubuntu-latest
    needs: python-tests

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: |
          python -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
